name: Autogenerated
services:
  frontend:
    name: frontend
    type: Deployment.K8s
    namespace: default
    settings:
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: frontend
            service: frontend
        template:
          metadata:
            annotations:
              consul.hashicorp.com/connect-inject: "true"
              consul.hashicorp.com/connect-service-upstreams: public-api:8080
              consul.hashicorp.com/enable-metrics-merging: "false"
            labels:
              app: frontend
              service: frontend
          spec:
            containers:
            - image: hashicorpdemoapp/frontend:v0.0.5
              name: frontend
              ports:
              - containerPort: 80
              volumeMounts:
              - mountPath: /etc/nginx/conf.d
                name: config
                readOnly: true
            serviceAccountName: frontend
            volumes:
            - configMap:
                items:
                - key: config
                  path: default.conf
                name: nginx-configmap
              name: config
  1f613739-b3a1-4074-a00a-4336da693912:
    name: frontend
    type: ServiceDefaults.Consul
    namespace: default
    settings:
      protocol: http
  4a27fb99-24b3-476f-b314-fecbf721703c:
    name: public-api
    type: ServiceAccount.K8s
    namespace: default
    settings:
      automountServiceAccountToken: true
  public-api:
    name: public-api
    type: Deployment.K8s
    namespace: default
    settings:
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: public-api
            service: public-api
        template:
          metadata:
            annotations:
              consul.hashicorp.com/connect-inject: "true"
              consul.hashicorp.com/connect-service-upstreams: product-api:9090
              consul.hashicorp.com/enable-metrics-merging: "false"
            labels:
              app: public-api
              service: public-api
          spec:
            containers:
            - env:
              - name: BIND_ADDRESS
                value: :8080
              - name: PRODUCT_API_URI
                value: http://localhost:9090
              image: hashicorpdemoapp/public-api:v0.0.7
              name: public-api
              ports:
              - containerPort: 8080
            serviceAccountName: public-api
  21eae648-aca8-4998-8eda-decedf3f8fb3:
    name: postgres
    type: ServiceDefaults.Consul
    namespace: default
    settings:
      protocol: tcp
  37de7f1c-ee5c-4fa6-a9ca-c7f24a450731:
    name: product-api
    type: ServiceAccount.K8s
    namespace: default
    settings:
      automountServiceAccountToken: true
  61a4c4b3-ab0c-4b9f-b8e8-f5861865a507:
    name: postgres
    type: Service.K8s
    namespace: default
    labels:
      app: postgres
    settings:
      spec:
        ports:
        - port: 5432
          targetPort: 5432
        selector:
          app: postgres
        type: ClusterIP
  070a3798-45ae-4981-affa-cc2b38ae0007:
    name: db-configmap
    type: ConfigMap.K8s
    namespace: default
    settings:
      data:
        config: |-
          {
            "db_connection": "host=localhost port=5432 user=postgres password=password dbname=products sslmode=disable",
            "bind_address": ":9090",
            "metrics_address": ":9103"
          }
  811f8879-37a1-484b-b40e-23ba85ba232e:
    name: product-api
    type: Service.K8s
    namespace: default
    settings:
      spec:
        ports:
        - name: http
          port: 9090
          protocol: TCP
          targetPort: 9090
        selector:
          app: product-api
  945f934c-56f6-46cb-a57c-282419c9d7f6:
    name: public-api
    type: ServiceDefaults.consul
    namespace: default
    settings:
      protocol: http
  product-api:
    name: product-api
    type: Deployment.K8s
    namespace: default
    labels:
      app: product-api
    settings:
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: product-api
        template:
          metadata:
            annotations:
              consul.hashicorp.com/connect-inject: "true"
              consul.hashicorp.com/connect-service-upstreams: postgres:5432
              consul.hashicorp.com/enable-metrics-merging: "false"
            labels:
              app: product-api
          spec:
            containers:
            - env:
              - name: CONFIG_FILE
                value: /config/conf.json
              image: hashicorpdemoapp/product-api:v0.0.22
              livenessProbe:
                httpGet:
                  path: /health/livez
                  port: 9090
                periodSeconds: 5
              name: product-api
              ports:
              - containerPort: 9090
              - containerPort: 9103
              readinessProbe:
                failureThreshold: 30
                httpGet:
                  path: /health/readyz
                  port: 9090
                initialDelaySeconds: 15
                periodSeconds: 10
                timeoutSeconds: 1
              volumeMounts:
              - mountPath: /config
                name: config
                readOnly: true
            serviceAccountName: product-api
            volumes:
            - configMap:
                items:
                - key: config
                  path: conf.json
                name: db-configmap
              name: config
  2621bfdc-a246-4e5a-9f44-a9c1a8e784bf:
    name: frontend
    type: ServiceAccount.K8s
    namespace: default
    settings:
      automountServiceAccountToken: true
  018512bf-eba0-4321-b809-0e08f8c1c4d8:
    name: nginx-configmap
    type: ConfigMap.K8s
    namespace: default
    settings:
      data:
        config: |-
          # /etc/nginx/conf.d/default.conf
          server {
              listen       80;
              server_name  localhost;
              #charset koi8-r;
              #access_log  /var/log/nginx/host.access.log  main;
              location / {
                  root   /usr/share/nginx/html;
                  index  index.html index.htm;
              }
              # Proxy pass the api location to save CORS
              # Use location exposed by Consul connect
              location /api {
                  proxy_pass http://127.0.0.1:8080;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection "Upgrade";
                  proxy_set_header Host $host;
              }
              error_page   500 502 503 504  /50x.html;
              location = /50x.html {
                  root   /usr/share/nginx/html;
              }
          }
  880149e3-a799-4d79-a270-8a1558b13a80:
    name: frontend
    type: Service.K8s
    namespace: default
    labels:
      app: frontend
    settings:
      spec:
        ports:
        - port: 80
          targetPort: 80
        selector:
          app: frontend
        type: ClusterIP
  af5d35eb-4e0b-4e78-9c50-8ff517169df6:
    name: product-api
    type: ServiceDefaults.consul
    namespace: default
    settings:
      protocol: http
  b35f7472-05de-4db9-9bc5-078ed4cec41b:
    name: public-api
    type: Service.K8s
    namespace: default
    labels:
      app: public-api
    settings:
      spec:
        ports:
        - port: 8080
          targetPort: 8080
        selector:
          app: public-api
        type: ClusterIP
  d07e821f-35b4-4ff7-bb09-971756aad986:
    name: postgres
    type: ServiceAccount.K8s
    namespace: default
    settings:
      automountServiceAccountToken: true
  postgres:
    name: postgres
    type: Deployment.K8s
    namespace: default
    settings:
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: postgres
            service: postgres
        template:
          metadata:
            annotations:
              consul.hashicorp.com/connect-inject: "true"
              consul.hashicorp.com/enable-metrics-merging: "false"
              prometheus.io/port: "9102"
              prometheus.io/scrape: "true"
            labels:
              app: postgres
              service: postgres
          spec:
            containers:
            - args:
              - -c
              - listen_addresses=127.0.0.1
              env:
              - name: POSTGRES_DB
                value: products
              - name: POSTGRES_USER
                value: postgres
              - name: POSTGRES_PASSWORD
                value: password
              image: hashicorpdemoapp/product-api-db:v0.0.22
              name: postgres
              ports:
              - containerPort: 5432
              volumeMounts:
              - mountPath: /var/lib/postgresql/data
                name: pgdata
            serviceAccountName: postgres
            volumes:
            - emptyDir: {}
              name: pgdata